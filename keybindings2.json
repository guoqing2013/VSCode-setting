// Place your key bindings in this file to overwrite the defaults
[
    {
        "command": "workbench.action.showCommands",
        "key": "alt-x"
    },
    //ctrl+g cancell stuff
    {
        "command": "workbench.action.closeMessages",
        "key": "escape",
        "when": "globalMessageVisible"
    },
    {
        "command": "workbench.action.hideInterfaceOverview",
        "key": "escape",
        "when": "interfaceOverviewVisible"
    },
    {
        "command": "cancelRenameInput",
        "key": "escape",
        "when": "editorFocus && renameInputVisible"
    },
    //Formatting
    {
        "key": "alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    //Ctrl+g exiting emacs
    {
        "key": "ctrl+g",
        "command": "emacs.C-g",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "emacs.exitMarkMode",
        "when": "editorTextFocus && editorHasSelection"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearchEditor",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "closeReferenceSearch",
        "when": "referenceSearchVisible && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+g",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && editorTextFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "leaveSnippet",
        "when": "editorTextFocus && inSnippetMode"
    },
    {
        "key": "ctrl+g",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeParameterHints",
        "when": "editorTextFocus && parameterHintsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "hideSuggestWidget",
        "when": "editorTextFocus && suggestWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible"
    },
    {
        "key": "ctrl+g",
        "command": "closeAccessibilityHelp",
        "when": "accessibilityHelpWidgetVisible && editorFocus"
    },
    {
        "key": "ctrl+g",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeMessages",
        "when": "globalMessageVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    //SÃ¸king
    {
        "key": "ctrl+f",
        "command": "actions.find",
        "when": "!findWidgetVisible"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.nextMatchFindAction",
        "when": "findWidgetVisible"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.previousMatchFindAction",
        "when": "findWidgetVisible"
    },
    //Terminal
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchInputBoxFocus && searchViewletVisible"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    //Div
    {
        "key": "alt+w",
        "command": "workbench.action.switchWindow"
    },
    {
        "key": "alt+d",
        "command": "deleteWordRight",
        "when": "editorTextFocus"
    }
]